# 1) Create the skeleton in a new folder
setwd("/home/clemi/Documents/Uni/4Semester/statsoft2/gradedExercises/06/")
# usethis::create_package("./forestSim")   # first install don't use it
unloadNamespace("forestSim")
# 2) Drop the files shown above into that folder
#    (or copy‑paste them in RStudio's file explorer)
# 3) Document & install
devtools::document("./forestSim")
devtools::install("./forestSim")
# 4) Quick smoke test
library(forestSim)                   # now picks up the new code
sim <- simulate_forest(iris, target = "Species", ntree = 50)
head(sim)
plot_accuracy_growth(sim)                # should open a line plot
# 5) (Optional) knit the demo vignette
# devtools::build_vignettes("./forestSim")
# browseVignettes("forestSim")
library(forestSim)                   # load newly created package
x <- cars
#sim <- simulate_forest(cars, target = "Species", ntree = 50)
#head(sim)
#plot_accuracy_growth(sim)                # should open a line plot
View(x)
View(x)
library(forestSim)            # load our package
library(ggplot2)              # Load ggplot2 package
x <- diamonds
#sim <- simulate_forest(cars, target = "Species", ntree = 50)
#head(sim)
#plot_accuracy_growth(sim)                # should open a line plot
View(x)
View(x)
library(forestSim)            # load our package
library(ggplot2)              # Load ggplot2 package
sim2 <- simulate_forest(diamonds, target = "price", ntree = 50)
library(forestSim)            # load our package
library(ggplot2)              # Load ggplot2 package
# Set a seed for reproducibility
set.seed(42)
# Create a random sample of indices for the training set (50% of the data)
train_indices <- sample(1:nrow(diamonds), size = 0.5 * nrow(diamonds))
# Split the dataset into training and testing sets
train_set <- diamonds[train_indices, ]
test_set <- diamonds[-train_indices, ]
# Check the dimensions of the splits
dim(train_set)  # Should be approximately half of the total rows
dim(test_set)   # Should also be approximately half of the total rows
# Optionally, check the first few rows of each set
head(train_set)
head(test_set)
sim2 <- simulate_forest(trian_set, target = "price", ntree = 50, test=test_set)
library(forestSim)            # load our package
library(ggplot2)              # Load ggplot2 package
# Set a seed for reproducibility
set.seed(42)
# Create a random sample of indices for the training set (50% of the data)
train_indices <- sample(1:nrow(diamonds), size = 0.5 * nrow(diamonds))
# Split the dataset into training and testing sets
train_set <- diamonds[train_indices, ]
test_set <- diamonds[-train_indices, ]
# Check the dimensions of the splits
dim(train_set)  # Should be approximately half of the total rows
dim(test_set)   # Should also be approximately half of the total rows
# Optionally, check the first few rows of each set
head(train_set)
head(test_set)
sim2 <- simulate_forest(train_set, target = "price", ntree = 50, test=test_set)
library(forestSim)            # load our package
library(ggplot2)              # Load ggplot2 package
# Set a seed for reproducibility
set.seed(42)
# Create a random sample of indices for the training set (50% of the data)
sample_indices <- sample(1:nrow(diamonds), size = 1000)
# Create the training set with the sampled entries
train_set <- diamonds[sample_indices, ]    # test_set <- diamonds[-train_indices, ]
# Check the dimensions of the splits
dim(train_set)  # Should be approximately half of the total rows
dim(test_set)   # Should also be approximately half of the total rows
# Optionally, check the first few rows of each set
head(train_set)
head(test_set)
sim2 <- simulate_forest(train_set, target = "price", ntree = 50)
library(forestSim)            # load our package
library(ggplot2)              # Load ggplot2 package
# Set a seed for reproducibility
set.seed(42)
# Create a random sample of indices for the training set (50% of the data)
sample_indices <- sample(1:nrow(diamonds), size = 1000)
# Create the training set with the sampled entries
train_set <- diamonds[sample_indices, ]    # test_set <- diamonds[-train_indices, ]
# Check the dimensions of the splits
dim(train_set)  # Should be approximately half of the total rows
dim(test_set)   # Should also be approximately half of the total rows
# Optionally, check the first few rows of each set
head(train_set)
head(test_set)
sim2 <- simulate_forest(train_set, target = "price", ntree = 50)
library(forestSim)            # load our package
library(ggplot2)              # Load ggplot2 package
# Set a seed for reproducibility
set.seed(42)
# Create a random sample of indices for the training set (50% of the data)
sample_indices <- sample(1:nrow(diamonds), size = 1000)
# Create the training set with the sampled entries
train_set <- diamonds[sample_indices, ]    # test_set <- diamonds[-train_indices, ]
head(train_set)
# Check the dimensions of the splits
dim(train_set)  # Should be approximately half of the total rows
dim(test_set)   # Should also be approximately half of the total rows
# Optionally, check the first few rows of each set
head(train_set)
head(test_set)
sim2 <- simulate_forest(train_set, target = "price", ntree = 50)
rlang::last_trace()
# 1) Create the skeleton in a new folder
setwd("/home/clemi/Documents/Uni/4Semester/statsoft2/gradedExercises/06/")
# usethis::create_package("./forestSim")   # first install don't use it
unloadNamespace("forestSim")
# 2) Drop the files shown above into that folder
#    (or copy‑paste them in RStudio's file explorer)
# 3) Document & install
devtools::document("./forestSim")
devtools::install("./forestSim")
# 4) Quick smoke test
library(forestSim)                   # load newly created package
sim <- simulate_forest(iris, target = "Species", ntree = 50)
head(sim)
plot_accuracy_growth(sim)                # should open a line plot
# 5) (Optional) knit the demo vignette
# devtools::build_vignettes("./forestSim")
# browseVignettes("forestSim")
library(forestSim)            # load our package
library(ggplot2)              # Load ggplot2 package
# Set a seed for reproducibility
set.seed(42)
# Create a random sample of indices for the training set (50% of the data)
sample_indices <- sample(1:nrow(diamonds), size = 1000)
# Create the training set with the sampled entries
train_set <- diamonds[sample_indices, ]    # test_set <- diamonds[-train_indices, ]
head(train_set)
# Check the dimensions of the splits
dim(train_set)  # Should be approximately half of the total rows
dim(test_set)   # Should also be approximately half of the total rows
# Optionally, check the first few rows of each set
head(train_set)
head(test_set)
sim2 <- simulate_forest(train_set, target = "price", ntree = 50)
head(sim2)
plot_accuracy_growth(sim2)                # should open a line plot
#sim <- simulate_forest(cars, target = "Species", ntree = 50)
#head(sim)
#plot_accuracy_growth(sim)                # should open a line plot
library(forestSim)            # load our package
library(ggplot2)              # Load ggplot2 package
# Set a seed for reproducibility
set.seed(42)
# Create a random sample of indices for the training set (50% of the data)
train_indices <- sample(1:nrow(diamonds), size = 0.5 * nrow(diamonds))
# Split the dataset into training and testing sets
train_set <- diamonds[train_indices, ]
test_set <- diamonds[-train_indices, ]
# Check the dimensions of the splits
trainCount <- dim(train_set)  # Should be approximately half of the total rows
testCount <- dim(test_set)   # Should also be approximately half of the total rows
# Optionally, check the first few rows of each set
head(train_set)
head(test_set)
sim2 <- simulate_forest(train_set, target = "price", ntree = 50)
head(sim2)
plot_accuracy_growth(sim2)                # should open a line plot
#sim <- simulate_forest(cars, target = "Species", ntree = 50)
#head(sim)
#plot_accuracy_growth(sim)                # should open a line plot
library(forestSim)            # load our package
library(ggplot2)              # Load ggplot2 package
# Set a seed for reproducibility
set.seed(42)
# Create a random sample of indices for the training set (50% of the data)
train_indices <- sample(1:nrow(diamonds), size = 0.5 * nrow(diamonds))
# Split the dataset into training and testing sets
train_set <- diamonds[train_indices, ]
test_set <- diamonds[-train_indices, ]
# Check the dimensions of the splits
trainCount <- dim(train_set)  # Should be approximately half of the total rows
testCount <- dim(test_set)   # Should also be approximately half of the total rows
# Optionally, check the first few rows of each set
head(train_set)
head(test_set)
sim2 <- simulate_forest(train_set, target = "price", ntree = 50, test = test_set)
head(sim2)
plot_accuracy_growth(sim2)                # should open a line plot
#sim <- simulate_forest(cars, target = "Species", ntree = 50)
#head(sim)
#plot_accuracy_growth(sim)                # should open a line plot
View(sim2)
View(x)
library(forestSim)            # load our package
library(ggplot2)              # Load ggplot2 package
# Set a seed for reproducibility
set.seed(42)
# Create a random sample of indices for the training set (50% of the data)
train_indices <- sample(1:nrow(diamonds), size = 0.5 * nrow(diamonds))
# Split the dataset into training and testing sets
train_set <- diamonds[train_indices, ]
test_set <- diamonds[-train_indices, ]
# Check the dimensions of the splits
trainCount <- dim(train_set)  # Should be approximately half of the total rows
testCount <- dim(test_set)   # Should also be approximately half of the total rows
# Optionally, check the first few rows of each set
head(train_set)
head(test_set)
# uncommment to predict the price
# sim2 <- simulate_forest(train_set, target = "price", ntree = 50, test = test_set)
# find a model to predict the
sim2 <- simulate_forest(train_set, target = "cut", ntree = 50, test = test_set)
head(sim2)
plot_accuracy_growth(sim2)                # should open a line plot
#sim <- simulate_forest(cars, target = "Species", ntree = 50)
#head(sim)
#plot_accuracy_growth(sim)                # should open a line plot
# 1) Create the skeleton in a new folder
setwd("/home/clemi/Documents/Uni/4Semester/statsoft2/gradedExercises/06/")
# usethis::create_package("./forestSim")   # first install don't use it
unloadNamespace("forestSim")
# 2) Drop the files shown above into that folder
#    (or copy‑paste them in RStudio's file explorer)
# 3) Document & install
devtools::document("./forestSim")
devtools::install("./forestSim")
# 4) Quick smoke test
library(forestSim)                   # load newly created package
sim <- simulate_forest(iris, target = "Species", ntree = 50)
head(sim)
plot_accuracy_growth(sim)                # should open a line plot
# 5) (Optional) knit the demo vignette
# devtools::build_vignettes("./forestSim")
# browseVignettes("forestSim")
library(forestSim)            # load our package
library(ggplot2)              # Load ggplot2 package
# Set a seed for reproducibility
set.seed(42)
# Create a random sample of indices for the training set (50% of the data)
train_indices <- sample(1:nrow(diamonds), size = 0.5 * nrow(diamonds))
# Split the dataset into training and testing sets
train_set <- diamonds[train_indices, ]
test_set <- diamonds[-train_indices, ]
# Check the dimensions of the splits
trainCount <- dim(train_set)  # Should be approximately half of the total rows
testCount <- dim(test_set)   # Should also be approximately half of the total rows
# Optionally, check the first few rows of each set
head(train_set)
head(test_set)
# uncommment to predict the price
# sim2 <- simulate_forest(train_set, target = "price", ntree = 50, test = test_set)
# find a model to predict the
sim2 <- simulate_forest(train_set, target = "cut", ntree = 50, test = test_set)
head(sim2)
plot_accuracy_growth(sim2)                # should open a line plot
#sim <- simulate_forest(cars, target = "Species", ntree = 50)
#head(sim)
#plot_accuracy_growth(sim)                # should open a line plot
